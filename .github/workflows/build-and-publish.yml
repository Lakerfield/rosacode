name: Build .NET Core and publish

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.2.0
      with:
          versionSpec: '5.8.x'
    - name: Use GitVersion
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v3.2.0
    - run: |
        echo "Major: ${{ steps.gitversion.outputs.major }}" >> $GITHUB_OUTPUT
        echo "Minor: ${{ steps.gitversion.outputs.minor }}" >> $GITHUB_OUTPUT
        echo "Patch: ${{ steps.gitversion.outputs.patch }}" >> $GITHUB_OUTPUT
        echo "PreReleaseTag: ${{ steps.gitversion.outputs.preReleaseTag }}" >> $GITHUB_OUTPUT
        echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.preReleaseTagWithDash }}" >> $GITHUB_OUTPUT
        echo "PreReleaseLabel: ${{ steps.gitversion.outputs.preReleaseLabel }}" >> $GITHUB_OUTPUT
        echo "PreReleaseNumber: ${{ steps.gitversion.outputs.preReleaseNumber }}" >> $GITHUB_OUTPUT
        echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.weightedPreReleaseNumber }}" >> $GITHUB_OUTPUT
        echo "BuildMetaData: ${{ steps.gitversion.outputs.buildMetaData }}" >> $GITHUB_OUTPUT
        echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.buildMetaDataPadded }}" >> $GITHUB_OUTPUT
        echo "FullBuildMetaData: ${{ steps.gitversion.outputs.fullBuildMetaData }}" >> $GITHUB_OUTPUT
        echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}" >> $GITHUB_OUTPUT
        echo "SemVer: ${{ steps.gitversion.outputs.semVer }}" >> $GITHUB_OUTPUT
        echo "LegacySemVer: ${{ steps.gitversion.outputs.legacySemVer }}" >> $GITHUB_OUTPUT
        echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.legacySemVerPadded }}" >> $GITHUB_OUTPUT
        echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}" >> $GITHUB_OUTPUT
        echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}" >> $GITHUB_OUTPUT
        echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}" >> $GITHUB_OUTPUT
        echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}" >> $GITHUB_OUTPUT
        echo "BranchName: ${{ steps.gitversion.outputs.branchName }}" >> $GITHUB_OUTPUT
        echo "Sha: ${{ steps.gitversion.outputs.sha }}" >> $GITHUB_OUTPUT
        echo "ShortSha: ${{ steps.gitversion.outputs.shortSha }}" >> $GITHUB_OUTPUT
        echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}" >> $GITHUB_OUTPUT
        echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}" >> $GITHUB_OUTPUT
        echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}" >> $GITHUB_OUTPUT
        echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.nuGetPreReleaseTag }}" >> $GITHUB_OUTPUT
        echo "VersionSourceSha: ${{ steps.gitversion.outputs.versionSourceSha }}" >> $GITHUB_OUTPUT
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}" >> $GITHUB_OUTPUT
        echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}" >> $GITHUB_OUTPUT
        echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}" >> $GITHUB_OUTPUT
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4.3.1
      with:
        dotnet-version: 8.0.401
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore  -p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} -p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} -p:InformationalVersion=${{ steps.gitversion.outputs.Sha }} -p:EnableWindowsTargeting=true
    - name: Test
      run: dotnet test --no-restore --verbosity normal
    - name: Pack Lakerfield.RosaCode with dotnet
      run: dotnet pack --no-restore --no-build src/Lakerfield.RosaCode/Lakerfield.RosaCode.csproj --output nuget-packages --configuration Release -p:PackageVersion=${{ steps.gitversion.outputs.semVer }}
    - name: Pack Lakerfield.RosaCode.Controls with dotnet
      run: dotnet pack --no-restore --no-build src/Lakerfield.RosaCode.Controls/Lakerfield.RosaCode.Controls.csproj --output nuget-packages --configuration Release -p:PackageVersion=${{ steps.gitversion.outputs.semVer }}
    - name: Pack with dotnet
      run: dotnet pack --no-restore --no-build src/Lakerfield.RosaCode.Roslyn/Lakerfield.RosaCode.Roslyn.csproj --output nuget-packages --configuration Release -p:PackageVersion=${{ steps.gitversion.outputs.semVer }}
    - name: Push with dotnet
      run: dotnet nuget push nuget-packages/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
