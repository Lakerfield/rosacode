name: Build .NET Core and publish

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.2.0
      with:
          versionSpec: '5.8.x'
    - name: Use GitVersion
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v3.2.0
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4.3.1
      with:
        dotnet-version: 8.0.401
    - name: Install dependencies
      run: dotnet restore -p:EnableWindowsTargeting=true
    - name: Build
      run: dotnet build --configuration Release --no-restore  -p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} -p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} -p:InformationalVersion=${{ steps.gitversion.outputs.Sha }} -p:EnableWindowsTargeting=true
    - name: Test
      run: dotnet test --no-restore --verbosity normal
    - name: Pack Lakerfield.RosaCode with dotnet
      run: dotnet pack --no-restore --no-build src/Lakerfield.RosaCode/Lakerfield.RosaCode.csproj --output nuget-packages --configuration Release -p:PackageVersion=${{ steps.gitversion.outputs.semVer }}
    - name: Pack Lakerfield.RosaCode.Controls with dotnet
      run: dotnet pack --no-restore --no-build src/Lakerfield.RosaCode.Controls/Lakerfield.RosaCode.Controls.csproj --output nuget-packages --configuration Release -p:PackageVersion=${{ steps.gitversion.outputs.semVer }}
    - name: Pack with dotnet
      run: dotnet pack --no-restore --no-build src/Lakerfield.RosaCode.Roslyn/Lakerfield.RosaCode.Roslyn.csproj --output nuget-packages --configuration Release -p:PackageVersion=${{ steps.gitversion.outputs.semVer }}
    - name: Push with dotnet
      run: dotnet nuget push nuget-packages/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
